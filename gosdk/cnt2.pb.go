// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cnt2.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	cnt2.proto

It has these top-level messages:
	RegisterRequest
	RegisterResponse
	QueryRequest
	QueryResponse
	ResponseMessage
	ValueChangeResultRequest
	ValueChangeResultResponse
*/
package gosdk

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ValueChangeResultRequest_ValueChangeResult int32

const (
	ValueChangeResultRequest_FAILED  ValueChangeResultRequest_ValueChangeResult = 0
	ValueChangeResultRequest_SUCCESS ValueChangeResultRequest_ValueChangeResult = 1
)

var ValueChangeResultRequest_ValueChangeResult_name = map[int32]string{
	0: "FAILED",
	1: "SUCCESS",
}
var ValueChangeResultRequest_ValueChangeResult_value = map[string]int32{
	"FAILED":  0,
	"SUCCESS": 1,
}

func (x ValueChangeResultRequest_ValueChangeResult) String() string {
	return proto.EnumName(ValueChangeResultRequest_ValueChangeResult_name, int32(x))
}
func (ValueChangeResultRequest_ValueChangeResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{5, 0}
}

type RegisterRequest struct {
	App      string `protobuf:"bytes,1,opt,name=app" json:"app,omitempty"`
	Profile  string `protobuf:"bytes,2,opt,name=profile" json:"profile,omitempty"`
	ServerIp string `protobuf:"bytes,3,opt,name=server_ip,json=serverIp" json:"server_ip,omitempty"`
	Pid      string `protobuf:"bytes,4,opt,name=pid" json:"pid,omitempty"`
}

func (m *RegisterRequest) Reset()                    { *m = RegisterRequest{} }
func (m *RegisterRequest) String() string            { return proto.CompactTextString(m) }
func (*RegisterRequest) ProtoMessage()               {}
func (*RegisterRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RegisterRequest) GetApp() string {
	if m != nil {
		return m.App
	}
	return ""
}

func (m *RegisterRequest) GetProfile() string {
	if m != nil {
		return m.Profile
	}
	return ""
}

func (m *RegisterRequest) GetServerIp() string {
	if m != nil {
		return m.ServerIp
	}
	return ""
}

func (m *RegisterRequest) GetPid() string {
	if m != nil {
		return m.Pid
	}
	return ""
}

type RegisterResponse struct {
	Result int32  `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	NodeId string `protobuf:"bytes,2,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
}

func (m *RegisterResponse) Reset()                    { *m = RegisterResponse{} }
func (m *RegisterResponse) String() string            { return proto.CompactTextString(m) }
func (*RegisterResponse) ProtoMessage()               {}
func (*RegisterResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *RegisterResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func (m *RegisterResponse) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

type QueryRequest struct {
	App        string `protobuf:"bytes,1,opt,name=app" json:"app,omitempty"`
	Profile    string `protobuf:"bytes,2,opt,name=profile" json:"profile,omitempty"`
	Key        string `protobuf:"bytes,3,opt,name=key" json:"key,omitempty"`
	KeyVersion int64  `protobuf:"varint,4,opt,name=key_version,json=keyVersion" json:"key_version,omitempty"`
}

func (m *QueryRequest) Reset()                    { *m = QueryRequest{} }
func (m *QueryRequest) String() string            { return proto.CompactTextString(m) }
func (*QueryRequest) ProtoMessage()               {}
func (*QueryRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *QueryRequest) GetApp() string {
	if m != nil {
		return m.App
	}
	return ""
}

func (m *QueryRequest) GetProfile() string {
	if m != nil {
		return m.Profile
	}
	return ""
}

func (m *QueryRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *QueryRequest) GetKeyVersion() int64 {
	if m != nil {
		return m.KeyVersion
	}
	return 0
}

type QueryResponse struct {
	Result []*ResponseMessage `protobuf:"bytes,1,rep,name=result" json:"result,omitempty"`
}

func (m *QueryResponse) Reset()                    { *m = QueryResponse{} }
func (m *QueryResponse) String() string            { return proto.CompactTextString(m) }
func (*QueryResponse) ProtoMessage()               {}
func (*QueryResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *QueryResponse) GetResult() []*ResponseMessage {
	if m != nil {
		return m.Result
	}
	return nil
}

type ResponseMessage struct {
	Key     string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Profile string `protobuf:"bytes,2,opt,name=profile" json:"profile,omitempty"`
	Path    string `protobuf:"bytes,3,opt,name=path" json:"path,omitempty"`
	Value   string `protobuf:"bytes,4,opt,name=value" json:"value,omitempty"`
	Version int64  `protobuf:"varint,5,opt,name=version" json:"version,omitempty"`
}

func (m *ResponseMessage) Reset()                    { *m = ResponseMessage{} }
func (m *ResponseMessage) String() string            { return proto.CompactTextString(m) }
func (*ResponseMessage) ProtoMessage()               {}
func (*ResponseMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ResponseMessage) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ResponseMessage) GetProfile() string {
	if m != nil {
		return m.Profile
	}
	return ""
}

func (m *ResponseMessage) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *ResponseMessage) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *ResponseMessage) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

type ValueChangeResultRequest struct {
	NodeId   string                                     `protobuf:"bytes,1,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	App      string                                     `protobuf:"bytes,2,opt,name=app" json:"app,omitempty"`
	Profile  string                                     `protobuf:"bytes,3,opt,name=profile" json:"profile,omitempty"`
	Key      string                                     `protobuf:"bytes,4,opt,name=key" json:"key,omitempty"`
	DeployId string                                     `protobuf:"bytes,5,opt,name=deploy_id,json=deployId" json:"deploy_id,omitempty"`
	Result   ValueChangeResultRequest_ValueChangeResult `protobuf:"varint,6,opt,name=result,enum=pb.ValueChangeResultRequest_ValueChangeResult" json:"result,omitempty"`
	Msg      string                                     `protobuf:"bytes,7,opt,name=msg" json:"msg,omitempty"`
	Version  int64                                      `protobuf:"varint,8,opt,name=version" json:"version,omitempty"`
}

func (m *ValueChangeResultRequest) Reset()                    { *m = ValueChangeResultRequest{} }
func (m *ValueChangeResultRequest) String() string            { return proto.CompactTextString(m) }
func (*ValueChangeResultRequest) ProtoMessage()               {}
func (*ValueChangeResultRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ValueChangeResultRequest) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *ValueChangeResultRequest) GetApp() string {
	if m != nil {
		return m.App
	}
	return ""
}

func (m *ValueChangeResultRequest) GetProfile() string {
	if m != nil {
		return m.Profile
	}
	return ""
}

func (m *ValueChangeResultRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ValueChangeResultRequest) GetDeployId() string {
	if m != nil {
		return m.DeployId
	}
	return ""
}

func (m *ValueChangeResultRequest) GetResult() ValueChangeResultRequest_ValueChangeResult {
	if m != nil {
		return m.Result
	}
	return ValueChangeResultRequest_FAILED
}

func (m *ValueChangeResultRequest) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *ValueChangeResultRequest) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

type ValueChangeResultResponse struct {
	Status int32  `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
}

func (m *ValueChangeResultResponse) Reset()                    { *m = ValueChangeResultResponse{} }
func (m *ValueChangeResultResponse) String() string            { return proto.CompactTextString(m) }
func (*ValueChangeResultResponse) ProtoMessage()               {}
func (*ValueChangeResultResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ValueChangeResultResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ValueChangeResultResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*RegisterRequest)(nil), "pb.RegisterRequest")
	proto.RegisterType((*RegisterResponse)(nil), "pb.RegisterResponse")
	proto.RegisterType((*QueryRequest)(nil), "pb.QueryRequest")
	proto.RegisterType((*QueryResponse)(nil), "pb.QueryResponse")
	proto.RegisterType((*ResponseMessage)(nil), "pb.ResponseMessage")
	proto.RegisterType((*ValueChangeResultRequest)(nil), "pb.ValueChangeResultRequest")
	proto.RegisterType((*ValueChangeResultResponse)(nil), "pb.ValueChangeResultResponse")
	proto.RegisterEnum("pb.ValueChangeResultRequest_ValueChangeResult", ValueChangeResultRequest_ValueChangeResult_name, ValueChangeResultRequest_ValueChangeResult_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ConfigCenterService service

type ConfigCenterServiceClient interface {
	// 根据appId，profile 查询
	QueryAll(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*QueryResponse, error)
	// 根据appId，profile，key，keyVersion查询，keyVersion=0时，返回最新数据，否则返回指定版本数据
	QueryKey(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*ResponseMessage, error)
	//  发布处理结果通知（灰度才会有这个回调通知）
	ValueChangeResultNotify(ctx context.Context, in *ValueChangeResultRequest, opts ...grpc.CallOption) (*ValueChangeResultResponse, error)
	// 启动的时候注册服务:获取服务id
	RegisterClient(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error)
}

type configCenterServiceClient struct {
	cc *grpc.ClientConn
}

func NewConfigCenterServiceClient(cc *grpc.ClientConn) ConfigCenterServiceClient {
	return &configCenterServiceClient{cc}
}

func (c *configCenterServiceClient) QueryAll(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*QueryResponse, error) {
	out := new(QueryResponse)
	err := grpc.Invoke(ctx, "/pb.ConfigCenterService/queryAll", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configCenterServiceClient) QueryKey(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*ResponseMessage, error) {
	out := new(ResponseMessage)
	err := grpc.Invoke(ctx, "/pb.ConfigCenterService/queryKey", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configCenterServiceClient) ValueChangeResultNotify(ctx context.Context, in *ValueChangeResultRequest, opts ...grpc.CallOption) (*ValueChangeResultResponse, error) {
	out := new(ValueChangeResultResponse)
	err := grpc.Invoke(ctx, "/pb.ConfigCenterService/valueChangeResultNotify", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configCenterServiceClient) RegisterClient(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error) {
	out := new(RegisterResponse)
	err := grpc.Invoke(ctx, "/pb.ConfigCenterService/registerClient", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ConfigCenterService service

type ConfigCenterServiceServer interface {
	// 根据appId，profile 查询
	QueryAll(context.Context, *QueryRequest) (*QueryResponse, error)
	// 根据appId，profile，key，keyVersion查询，keyVersion=0时，返回最新数据，否则返回指定版本数据
	QueryKey(context.Context, *QueryRequest) (*ResponseMessage, error)
	//  发布处理结果通知（灰度才会有这个回调通知）
	ValueChangeResultNotify(context.Context, *ValueChangeResultRequest) (*ValueChangeResultResponse, error)
	// 启动的时候注册服务:获取服务id
	RegisterClient(context.Context, *RegisterRequest) (*RegisterResponse, error)
}

func RegisterConfigCenterServiceServer(s *grpc.Server, srv ConfigCenterServiceServer) {
	s.RegisterService(&_ConfigCenterService_serviceDesc, srv)
}

func _ConfigCenterService_QueryAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigCenterServiceServer).QueryAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ConfigCenterService/QueryAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigCenterServiceServer).QueryAll(ctx, req.(*QueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigCenterService_QueryKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigCenterServiceServer).QueryKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ConfigCenterService/QueryKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigCenterServiceServer).QueryKey(ctx, req.(*QueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigCenterService_ValueChangeResultNotify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValueChangeResultRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigCenterServiceServer).ValueChangeResultNotify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ConfigCenterService/ValueChangeResultNotify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigCenterServiceServer).ValueChangeResultNotify(ctx, req.(*ValueChangeResultRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigCenterService_RegisterClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigCenterServiceServer).RegisterClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ConfigCenterService/RegisterClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigCenterServiceServer).RegisterClient(ctx, req.(*RegisterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ConfigCenterService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.ConfigCenterService",
	HandlerType: (*ConfigCenterServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "queryAll",
			Handler:    _ConfigCenterService_QueryAll_Handler,
		},
		{
			MethodName: "queryKey",
			Handler:    _ConfigCenterService_QueryKey_Handler,
		},
		{
			MethodName: "valueChangeResultNotify",
			Handler:    _ConfigCenterService_ValueChangeResultNotify_Handler,
		},
		{
			MethodName: "registerClient",
			Handler:    _ConfigCenterService_RegisterClient_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cnt2.proto",
}

func init() { proto.RegisterFile("cnt2.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 532 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x94, 0x4d, 0x6f, 0xd3, 0x4c,
	0x10, 0xc7, 0x9f, 0xb5, 0xf3, 0x3a, 0x79, 0x28, 0xee, 0xb6, 0xa2, 0x26, 0x05, 0x51, 0xf9, 0x14,
	0x09, 0x14, 0x44, 0x38, 0xc2, 0xa5, 0x98, 0x54, 0x8a, 0x78, 0x91, 0x70, 0x44, 0xae, 0x91, 0x53,
	0x4f, 0x5c, 0x2b, 0x8e, 0xbd, 0xf5, 0x6e, 0x22, 0xf9, 0x06, 0x37, 0x4e, 0x88, 0x8f, 0xc2, 0x47,
	0x44, 0x6b, 0xef, 0x36, 0x0e, 0x38, 0x1c, 0xb8, 0xed, 0xcc, 0x78, 0x67, 0x7e, 0xf3, 0xd7, 0xdf,
	0x0b, 0x70, 0x9d, 0x88, 0xd1, 0x90, 0x65, 0xa9, 0x48, 0xa9, 0xc1, 0x16, 0x4e, 0x0c, 0xf7, 0x3d,
	0x0c, 0x23, 0x2e, 0x30, 0xf3, 0xf0, 0x76, 0x83, 0x5c, 0x50, 0x0b, 0x4c, 0x9f, 0x31, 0x9b, 0x5c,
	0x90, 0x41, 0xd7, 0x93, 0x47, 0x6a, 0x43, 0x9b, 0x65, 0xe9, 0x32, 0x8a, 0xd1, 0x36, 0x8a, 0xac,
	0x0e, 0xe9, 0x39, 0x74, 0x39, 0x66, 0x5b, 0xcc, 0xe6, 0x11, 0xb3, 0xcd, 0xa2, 0xd6, 0x29, 0x13,
	0x13, 0x26, 0x1b, 0xb1, 0x28, 0xb0, 0x1b, 0x65, 0x23, 0x16, 0x05, 0x8e, 0x0b, 0xd6, 0x6e, 0x1a,
	0x67, 0x69, 0xc2, 0x91, 0x3e, 0x80, 0x56, 0x86, 0x7c, 0x13, 0x8b, 0x62, 0x62, 0xd3, 0x53, 0x11,
	0x3d, 0x83, 0x76, 0x92, 0x06, 0x38, 0x8f, 0x02, 0x35, 0xb4, 0x25, 0xc3, 0x49, 0xe0, 0xac, 0xe1,
	0xff, 0x4f, 0x1b, 0xcc, 0xf2, 0x7f, 0xe1, 0xb5, 0xc0, 0x5c, 0x61, 0xae, 0x48, 0xe5, 0x91, 0x3e,
	0x81, 0xde, 0x0a, 0xf3, 0xf9, 0x16, 0x33, 0x1e, 0xa5, 0x49, 0x01, 0x6b, 0x7a, 0xb0, 0xc2, 0x7c,
	0x56, 0x66, 0x9c, 0xd7, 0x70, 0x4f, 0x8d, 0x53, 0xc0, 0x4f, 0x2b, 0xc0, 0xe6, 0xa0, 0x37, 0x3a,
	0x19, 0xb2, 0xc5, 0x50, 0x57, 0x3f, 0x20, 0xe7, 0x7e, 0x88, 0x7a, 0x0b, 0xe7, 0x2b, 0x91, 0x02,
	0xef, 0xd5, 0x34, 0x04, 0xd9, 0x41, 0x1c, 0x06, 0xa6, 0xd0, 0x60, 0xbe, 0xb8, 0x51, 0xc4, 0xc5,
	0x99, 0x9e, 0x42, 0x73, 0xeb, 0xc7, 0x1b, 0x54, 0xca, 0x96, 0x81, 0xec, 0xa1, 0x97, 0x68, 0x16,
	0x4b, 0xe8, 0xd0, 0xf9, 0x69, 0x80, 0x3d, 0x93, 0xdf, 0xb8, 0x37, 0x7e, 0x12, 0xa2, 0x57, 0x90,
	0x69, 0xf5, 0x2a, 0x32, 0x93, 0xaa, 0xcc, 0x5a, 0x56, 0xa3, 0x56, 0x56, 0xb3, 0x56, 0xd6, 0xc6,
	0x6e, 0xa3, 0x73, 0xe8, 0x06, 0xc8, 0xe2, 0x34, 0x97, 0x8d, 0x9b, 0xa5, 0x31, 0xca, 0xc4, 0x24,
	0xa0, 0x57, 0x77, 0x0a, 0xb6, 0x2e, 0xc8, 0xe0, 0x68, 0x34, 0x94, 0x0a, 0x1e, 0x22, 0xac, 0x29,
	0x68, 0x8b, 0x58, 0x60, 0xae, 0x79, 0x68, 0xb7, 0xcb, 0xb1, 0x6b, 0x1e, 0x56, 0x45, 0xe8, 0xec,
	0x8b, 0xf0, 0x0c, 0x8e, 0xff, 0x68, 0x44, 0x01, 0x5a, 0x57, 0x97, 0x93, 0xf7, 0xe3, 0xb7, 0xd6,
	0x7f, 0xb4, 0x07, 0xed, 0xe9, 0x67, 0xd7, 0x1d, 0x4f, 0xa7, 0x16, 0x71, 0xc6, 0xf0, 0xb0, 0x86,
	0x67, 0xe7, 0x58, 0x2e, 0x7c, 0xb1, 0xe1, 0xda, 0xb1, 0x65, 0xa4, 0x71, 0x8c, 0x3b, 0x9c, 0xd1,
	0x77, 0x03, 0x4e, 0xdc, 0x34, 0x59, 0x46, 0xa1, 0x8b, 0x89, 0xc0, 0x6c, 0x8a, 0xd9, 0x36, 0xba,
	0x46, 0xfa, 0x1c, 0x3a, 0xb7, 0xd2, 0x53, 0x97, 0x71, 0x4c, 0x2d, 0xb9, 0x7c, 0xd5, 0xd0, 0xfd,
	0xe3, 0x4a, 0x46, 0x8d, 0x7c, 0xa1, 0x2e, 0xbc, 0xc3, 0xbc, 0xe6, 0x42, 0x9d, 0x03, 0xe9, 0x0c,
	0xce, 0xb6, 0xbf, 0xaf, 0xf0, 0x31, 0x15, 0xd1, 0x32, 0xa7, 0x8f, 0xfe, 0xa6, 0x77, 0xff, 0xf1,
	0x81, 0xaa, 0x42, 0x79, 0x05, 0x47, 0x99, 0xfa, 0x87, 0xdd, 0x38, 0xc2, 0x44, 0x50, 0x35, 0x7e,
	0xef, 0x15, 0xe9, 0x9f, 0xee, 0x27, 0xcb, 0xcb, 0x6f, 0xba, 0x5f, 0x08, 0xf9, 0x46, 0xc8, 0x0f,
	0x42, 0x16, 0xad, 0xe2, 0x11, 0x7a, 0xf9, 0x2b, 0x00, 0x00, 0xff, 0xff, 0x82, 0xab, 0x71, 0x5b,
	0x92, 0x04, 0x00, 0x00,
}
